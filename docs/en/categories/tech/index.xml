<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tech on Devean Medium</title>
    <link>https://www.devean.cn/en/categories/tech/</link>
    <description>Recent content in Tech on Devean Medium</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Thu, 04 Apr 2024 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://www.devean.cn/en/categories/tech/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Vue parent-child component interaction</title>
      <link>https://www.devean.cn/en/blog/2024/vue-parent-child-component-interaction/</link>
      <pubDate>Thu, 04 Apr 2024 00:00:00 +0000</pubDate>
      <guid>https://www.devean.cn/en/blog/2024/vue-parent-child-component-interaction/</guid>
      <description>Parameter interaction Props interaction Parent component &amp;lt;template&amp;gt; &amp;lt;ChildComponent :message=&amp;#34;dynamicMessage&amp;#34; /&amp;gt; &amp;lt;/template&amp;gt; &amp;lt;script setup lang=&amp;#34;ts&amp;#34;&amp;gt; import ChildComponent from &amp;#39;./ChildComponent.vue&amp;#39;; import { ref } from &amp;#39;vue&amp;#39;; const dynamicMessage = ref(&amp;#39;Hello, world!&amp;#39;); // 在父组件中可以动态更新 dynamicMessage 的值 &amp;lt;/script&amp;gt; Child component &amp;lt;template&amp;gt; &amp;lt;div&amp;gt;{{ message }}&amp;lt;/div&amp;gt; &amp;lt;/template&amp;gt; &amp;lt;script setup lang=&amp;#34;ts&amp;#34;&amp;gt; import { defineProps } from &amp;#39;vue&amp;#39;; const props = defineProps({ message: String, }); function showMessage() { console.log(props.message); } &amp;lt;/script&amp;gt; Router interaction Parent component &amp;lt;!-- ParentComponent.vue --&amp;gt; &amp;lt;template&amp;gt; &amp;lt;div&amp;gt; &amp;lt;h1&amp;gt;Parent Component&amp;lt;/h1&amp;gt; &amp;lt;button @click=&amp;#34;goToChild&amp;#34;&amp;gt;Go to Child Component&amp;lt;/button&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;/template&amp;gt; &amp;lt;script setup&amp;gt; import { useRouter } from &amp;#39;vue-router&amp;#39;; const router = useRouter(); const goToChild = () =&amp;gt; { const parentId = &amp;#39;123&amp;#39;; // Example parent id router.</description>
    </item>
    <item>
      <title>Low-Latency, High-Availability, High-Concurrency Trading Service Technical Solution</title>
      <link>https://www.devean.cn/en/blog/2024/qptrade/</link>
      <pubDate>Fri, 01 Mar 2024 00:00:00 +0000</pubDate>
      <guid>https://www.devean.cn/en/blog/2024/qptrade/</guid>
      <description>Background Current Situation: BTC and ETH simple option orders can only be placed with BTC or ETH, not with the stablecoin USDT. Functional Requirements Users can directly place option orders using USDT stablecoin. After closing options, BTC and ETH are directly exchanged for USDT and transferred to the user&amp;rsquo;s account. Non-Functional Requirements Low latency (dependence on market matching of trading services, higher latency may result in capital loss due to market changes) High availability (service should not be down, upgrade and release should minimize downtime, and automatic complete recovery should be possible after restart) High concurrency (when trading market data arrives, multiple users operate concurrently, and users are concurrent, no queuing for processing) Business Process Users place option orders in USDT mode for BTC simple options.</description>
    </item>
    <item>
      <title>Distributed Tracing</title>
      <link>https://www.devean.cn/en/blog/2024/distributed-tracing/</link>
      <pubDate>Fri, 09 Feb 2024 00:00:00 +0000</pubDate>
      <guid>https://www.devean.cn/en/blog/2024/distributed-tracing/</guid>
      <description>What is Distributed Tracing？ Distributed tracing, also known as distributed request tracking, is a methodology for analyzing and monitoring distributed service profiles, especially for failures that occur for unknown and degraded performance reasons.&#xA;Core concepts traceId:Identifies a unique ID generated by a single user request spanId:Identifies the position of this call in the call chain Why Distributed Tracking is Needed？ With the growth of business volume, monolithic services have been unable to meet the demand, so SOA servitization and microservices, and multiple instances of each service are deployed, resulting in increased difficulty in troubleshooting and performance issues.</description>
    </item>
    <item>
      <title>Free CA certification details process</title>
      <link>https://www.devean.cn/en/blog/2023/free-ca-certificate-configuration/</link>
      <pubDate>Mon, 11 Dec 2023 00:00:00 +0000</pubDate>
      <guid>https://www.devean.cn/en/blog/2023/free-ca-certificate-configuration/</guid>
      <description>Nginx Configuration nginx.conf config server { listen 80; listen [::]:80; server_name www.domain.com domain.com; return 301 https://$server_name$request_uri; } # HTTPS server server { listen 443 ssl; listen [::]:443 ssl; server_name www.domain.com domain.com; # website root direction root /usr/share/nginx/domain; index index.html index.htm; # SSL ssl_session_cache shared:SSL:1m; ssl_session_timeout 10m; ssl_ciphers PROFILE=SYSTEM; ssl_protocols TLSv1 TLSv1.1 TLSv1.2 TLSv1.3; ssl_prefer_server_ciphers on; proxy_ssl_server_name on; location / { } error_page 404 /404.html; location = /40x.html { } error_page 500 502 503 504 /50x.</description>
    </item>
  </channel>
</rss>
