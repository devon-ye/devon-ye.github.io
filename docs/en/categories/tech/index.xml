<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tech on Devean Medium</title>
    <link>https://www.devean.cn/en/categories/tech/</link>
    <description>Recent content in Tech on Devean Medium</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Fri, 01 Mar 2024 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://www.devean.cn/en/categories/tech/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Low-Latency, High-Availability, High-Concurrency Trading Service Technical Solution</title>
      <link>https://www.devean.cn/en/blog/2024/qptrade/</link>
      <pubDate>Fri, 01 Mar 2024 00:00:00 +0000</pubDate>
      <guid>https://www.devean.cn/en/blog/2024/qptrade/</guid>
      <description>Background Current Situation: BTC and ETH simple option orders can only be placed with BTC or ETH, not with the stablecoin USDT. Functional Requirements Users can directly place option orders using USDT stablecoin. After closing options, BTC and ETH are directly exchanged for USDT and transferred to the user&amp;rsquo;s account. Non-Functional Requirements Low latency (dependence on market matching of trading services, higher latency may result in capital loss due to market changes) High availability (service should not be down, upgrade and release should minimize downtime, and automatic complete recovery should be possible after restart) High concurrency (when trading market data arrives, multiple users operate concurrently, and users are concurrent, no queuing for processing) Business Process Users place option orders in USDT mode for BTC simple options.</description>
    </item>
    <item>
      <title>Distributed Tracing</title>
      <link>https://www.devean.cn/en/blog/2024/distributed-tracing/</link>
      <pubDate>Fri, 09 Feb 2024 00:00:00 +0000</pubDate>
      <guid>https://www.devean.cn/en/blog/2024/distributed-tracing/</guid>
      <description>What is Distributed Tracing？ Distributed tracing, also known as distributed request tracking, is a methodology for analyzing and monitoring distributed service profiles, especially for failures that occur for unknown and degraded performance reasons.&#xA;Core concepts traceId:Identifies a unique ID generated by a single user request spanId:Identifies the position of this call in the call chain Why Distributed Tracking is Needed？ With the growth of business volume, monolithic services have been unable to meet the demand, so SOA servitization and microservices, and multiple instances of each service are deployed, resulting in increased difficulty in troubleshooting and performance issues.</description>
    </item>
  </channel>
</rss>
